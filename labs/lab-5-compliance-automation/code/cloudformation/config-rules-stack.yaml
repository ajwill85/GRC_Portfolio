---
# CloudFormation template for setting up baseline AWS Config rules
# This template creates a set of AWS Config rules to enforce security best practices
# and an SNS topic for notifications about compliance changes
AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for baseline AWS Config rules'

Parameters:
  # Email address to receive compliance notifications
  NotificationEmail:
    Type: String
    Description: Email address to receive compliance notifications
    Default: your-email@example.com
  
  # S3 bucket to store compliance evidence
  ComplianceEvidentBucket:
    Type: String
    Description: S3 bucket name to store compliance evidence
    Default: compliance-evidence

Resources:
  # SNS Topic for compliance notifications
  ComplianceNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: Compliance Notifications
      TopicName: compliance-notifications

  # Email subscription to the SNS topic
  ComplianceNotificationSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: email
      Endpoint: !Ref NotificationEmail
      TopicArn: !Ref ComplianceNotificationTopic

  # AWS Config Rule: Check if IAM password policy meets requirements
  IAMPasswordPolicyRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: iam-password-policy
      Description: Checks whether the account password policy for IAM users meets the specified requirements.
      Source:
        Owner: AWS
        SourceIdentifier: IAM_PASSWORD_POLICY
      InputParameters:
        RequireUppercaseCharacters: true
        RequireLowercaseCharacters: true
        RequireSymbols: true
        RequireNumbers: true
        MinimumPasswordLength: 14
        PasswordReusePrevention: 24
        MaxPasswordAge: 90

  # AWS Config Rule: Check if root account has MFA enabled
  RootAccountMFARule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: root-account-mfa-enabled
      Description: Checks whether the root user of your AWS account requires multi-factor authentication for console sign-in.
      Source:
        Owner: AWS
        SourceIdentifier: ROOT_ACCOUNT_MFA_ENABLED

  # AWS Config Rule: Check if EBS volumes are encrypted
  EBSEncryptionRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: encrypted-volumes
      Description: Checks whether EBS volumes that are in an attached state are encrypted.
      Scope:
        ComplianceResourceTypes:
          - AWS::EC2::Volume
      Source:
        Owner: AWS
        SourceIdentifier: ENCRYPTED_VOLUMES

  # AWS Config Rule: Check if S3 buckets allow public read access
  S3BucketPublicReadRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: s3-bucket-public-read-prohibited
      Description: Checks that your Amazon S3 buckets do not allow public read access.
      Scope:
        ComplianceResourceTypes:
          - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_READ_PROHIBITED

  # AWS Config Rule: Check if S3 buckets allow public write access
  S3BucketPublicWriteRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: s3-bucket-public-write-prohibited
      Description: Checks that your Amazon S3 buckets do not allow public write access.
      Scope:
        ComplianceResourceTypes:
          - AWS::S3::Bucket
      Source:
        Owner: AWS
        SourceIdentifier: S3_BUCKET_PUBLIC_WRITE_PROHIBITED

  # AWS Config Rule: Check if security groups allow unrestricted SSH access
  RestrictedSSHRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: restricted-ssh
      Description: Checks whether security groups that are in use disallow unrestricted incoming SSH traffic.
      Scope:
        ComplianceResourceTypes:
          - AWS::EC2::SecurityGroup
      Source:
        Owner: AWS
        SourceIdentifier: INCOMING_SSH_DISABLED

  # AWS Config Rule: Check if IAM users have MFA enabled
  IAMUserMFARule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: iam-user-mfa-enabled
      Description: Checks whether the AWS Identity and Access Management users have multi-factor authentication (MFA) enabled.
      Source:
        Owner: AWS
        SourceIdentifier: IAM_USER_MFA_ENABLED

  # AWS Config Rule: Check if IAM access keys are rotated within 90 days
  AccessKeysRotatedRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: access-keys-rotated
      Description: Checks whether the active access keys are rotated within the number of days specified in maxAccessKeyAge.
      Source:
        Owner: AWS
        SourceIdentifier: ACCESS_KEYS_ROTATED
      InputParameters:
        maxAccessKeyAge: 90

  # AWS Config Rule: Check if CloudTrail is enabled
  CloudTrailEnabledRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cloudtrail-enabled
      Description: Checks whether AWS CloudTrail is enabled in your AWS account.
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENABLED

  # AWS Config Rule: Check if CloudTrail logs are encrypted
  CloudTrailEncryptionRule:
    Type: AWS::Config::ConfigRule
    Properties:
      ConfigRuleName: cloud-trail-encryption-enabled
      Description: Checks whether AWS CloudTrail is configured to use server side encryption (SSE) with AWS KMS keys.
      Source:
        Owner: AWS
        SourceIdentifier: CLOUD_TRAIL_ENCRYPTION_ENABLED

  # EventBridge rule to detect AWS Config compliance changes
  # This rule triggers when a resource becomes non-compliant
  ComplianceChangeRule:
    Type: AWS::Events::Rule
    Properties:
      Description: Rule to detect AWS Config compliance changes
      EventPattern:
        source:
          - aws.config
        detail-type:
          - Config Rules Compliance Change
        detail:
          newEvaluationResult:
            complianceType:
              - NON_COMPLIANT
      State: ENABLED
      Targets:
        - Arn: !Ref ComplianceNotificationTopic
          Id: ComplianceNotificationTarget

  # Auto remediation for S3 bucket public access
  # This sets up an AWS Config remediation action to automatically fix non-compliant S3 buckets
  S3PublicAccessRemediationConfig:
    Type: AWS::Config::RemediationConfiguration
    Properties:
      ConfigRuleName: !Ref S3BucketPublicReadRule
      TargetId: AWS-DisableS3BucketPublicReadWrite
      TargetType: SSM_DOCUMENT
      Automatic: true
      MaximumAutomaticAttempts: 3
      RetryAttemptSeconds: 60
      Parameters:
        AutomationAssumeRole:
          StaticValue:
            Values:
              - !GetAtt RemediationRole.Arn
        BucketName:
          ResourceValue:
            Value: RESOURCE_ID

  # IAM role for remediation actions
  # This role allows AWS Config to execute remediation actions
  RemediationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ssm.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: AllowSNSPublish
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: !Ref ComplianceNotificationTopic
        - PolicyName: AllowS3Evidence
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: !Sub arn:aws:s3:::${ComplianceEvidentBucket}/*

Outputs:
  # Output the ARN of the SNS topic for compliance notifications
  ComplianceNotificationTopicARN:
    Description: ARN of the SNS topic for compliance notifications
    Value: !Ref ComplianceNotificationTopic
  
  # Output the ARN of the IAM role for remediation actions
  RemediationRoleARN:
    Description: ARN of the IAM role for remediation actions
    Value: !GetAtt RemediationRole.Arn
  
  # Output the list of deployed AWS Config rules
  DeployedConfigRules:
    Description: List of deployed AWS Config rules
    Value: !Join 
      - ', '
      - - !Ref IAMPasswordPolicyRule
        - !Ref RootAccountMFARule
        - !Ref EBSEncryptionRule
        - !Ref S3BucketPublicReadRule
        - !Ref S3BucketPublicWriteRule
        - !Ref RestrictedSSHRule
        - !Ref IAMUserMFARule
        - !Ref AccessKeysRotatedRule
        - !Ref CloudTrailEnabledRule
        - !Ref CloudTrailEncryptionRule 